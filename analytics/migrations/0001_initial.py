# Generated by Django 4.2.7 on 2025-09-28 01:16

from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="AnalyticsEvent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "event_type",
                    models.CharField(
                        choices=[
                            ("USER_REGISTRATION", "User Registration"),
                            ("USER_LOGIN", "User Login"),
                            ("BOOKING_CREATED", "Booking Created"),
                            ("BOOKING_CANCELLED", "Booking Cancelled"),
                            ("PAYMENT_INITIATED", "Payment Initiated"),
                            ("PAYMENT_COMPLETED", "Payment Completed"),
                            ("SUBSCRIPTION_PURCHASED", "Subscription Purchased"),
                            ("ROUTE_VIEWED", "Route Viewed"),
                            ("SCHEDULE_VIEWED", "Schedule Viewed"),
                            ("APP_OPENED", "App Opened"),
                            ("NOTIFICATION_RECEIVED", "Notification Received"),
                            ("NOTIFICATION_CLICKED", "Notification Clicked"),
                        ],
                        max_length=30,
                    ),
                ),
                ("properties", models.JSONField(blank=True, default=dict)),
                ("session_id", models.CharField(blank=True, max_length=255, null=True)),
                ("platform", models.CharField(blank=True, max_length=20, null=True)),
                ("device_id", models.CharField(blank=True, max_length=255, null=True)),
                ("app_version", models.CharField(blank=True, max_length=20, null=True)),
                ("latitude", models.FloatField(blank=True, null=True)),
                ("longitude", models.FloatField(blank=True, null=True)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "Analytics Event",
                "verbose_name_plural": "Analytics Events",
                "db_table": "analytics_events",
            },
        ),
        migrations.CreateModel(
            name="CorporateMetrics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField()),
                ("active_employees", models.IntegerField(default=0)),
                ("new_employees", models.IntegerField(default=0)),
                ("total_bookings", models.IntegerField(default=0)),
                (
                    "total_spent",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=12),
                ),
                ("average_booking_per_employee", models.FloatField(default=0.0)),
                ("most_used_routes", models.JSONField(blank=True, default=list)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Corporate Metrics",
                "verbose_name_plural": "Corporate Metrics",
                "db_table": "corporate_metrics",
            },
        ),
        migrations.CreateModel(
            name="DailyMetrics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField()),
                ("new_users", models.IntegerField(default=0)),
                ("active_users", models.IntegerField(default=0)),
                ("total_users", models.IntegerField(default=0)),
                ("bookings_created", models.IntegerField(default=0)),
                ("bookings_cancelled", models.IntegerField(default=0)),
                ("bookings_completed", models.IntegerField(default=0)),
                ("no_shows", models.IntegerField(default=0)),
                (
                    "total_revenue",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=12),
                ),
                (
                    "subscription_revenue",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=12),
                ),
                (
                    "booking_revenue",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=12),
                ),
                (
                    "refunds_issued",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=12),
                ),
                ("routes_active", models.IntegerField(default=0)),
                ("schedules_operated", models.IntegerField(default=0)),
                ("average_capacity_utilization", models.FloatField(default=0.0)),
                ("vehicles_active", models.IntegerField(default=0)),
                ("vehicles_in_maintenance", models.IntegerField(default=0)),
                ("payments_successful", models.IntegerField(default=0)),
                ("payments_failed", models.IntegerField(default=0)),
                ("mpesa_payments", models.IntegerField(default=0)),
                ("stripe_payments", models.IntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Daily Metrics",
                "verbose_name_plural": "Daily Metrics",
                "db_table": "daily_metrics",
            },
        ),
        migrations.CreateModel(
            name="PerformanceAlert",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "alert_type",
                    models.CharField(
                        choices=[
                            ("LOW_CAPACITY", "Low Capacity Utilization"),
                            ("HIGH_CANCELLATION", "High Cancellation Rate"),
                            ("PAYMENT_FAILURE", "High Payment Failure Rate"),
                            ("SYSTEM_ERROR", "System Error"),
                            ("ROUTE_DELAY", "Route Delay"),
                            ("VEHICLE_MAINTENANCE", "Vehicle Maintenance Due"),
                        ],
                        max_length=30,
                    ),
                ),
                (
                    "severity",
                    models.CharField(
                        choices=[
                            ("LOW", "Low"),
                            ("MEDIUM", "Medium"),
                            ("HIGH", "High"),
                            ("CRITICAL", "Critical"),
                        ],
                        max_length=10,
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField()),
                ("threshold_value", models.FloatField(blank=True, null=True)),
                ("actual_value", models.FloatField(blank=True, null=True)),
                ("resolved", models.BooleanField(default=False)),
                ("resolved_at", models.DateTimeField(blank=True, null=True)),
                ("resolution_notes", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Performance Alert",
                "verbose_name_plural": "Performance Alerts",
                "db_table": "performance_alerts",
            },
        ),
        migrations.CreateModel(
            name="RouteMetrics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField()),
                ("bookings_count", models.IntegerField(default=0)),
                ("cancellations_count", models.IntegerField(default=0)),
                ("no_shows_count", models.IntegerField(default=0)),
                ("total_seats_offered", models.IntegerField(default=0)),
                ("seats_occupied", models.IntegerField(default=0)),
                ("capacity_utilization", models.FloatField(default=0.0)),
                (
                    "total_revenue",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=12),
                ),
                (
                    "average_fare",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                ("average_delay_minutes", models.FloatField(default=0.0)),
                ("on_time_percentage", models.FloatField(default=0.0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Route Metrics",
                "verbose_name_plural": "Route Metrics",
                "db_table": "route_metrics",
            },
        ),
        migrations.CreateModel(
            name="UserMetrics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField()),
                ("bookings_made", models.IntegerField(default=0)),
                ("cancellations_made", models.IntegerField(default=0)),
                ("no_shows", models.IntegerField(default=0)),
                (
                    "total_spent",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=12),
                ),
                (
                    "subscription_spent",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=12),
                ),
                (
                    "booking_spent",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=12),
                ),
                ("favorite_routes", models.JSONField(blank=True, default=list)),
                ("routes_used", models.IntegerField(default=0)),
                ("app_sessions", models.IntegerField(default=0)),
                ("total_session_duration", models.IntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "User Metrics",
                "verbose_name_plural": "User Metrics",
                "db_table": "user_metrics",
            },
        ),
    ]
